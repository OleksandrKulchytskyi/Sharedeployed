@model ShareDeployed.Common.RequetResponse.RangeRequest
@{
	ViewBag.Title = "Expenses";

	if (Model != null)
	{
		var now = DateTime.Now;
		Model.From = new DateTime(now.Year, now.Month, 1);
		Model.To = now;
	}
}

@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
	function ExpensesViewModel() {

		$.support.cors = true;
		var self = this;
		self.loaded = ko.observable(false);
		self.loadedTotal = ko.observable(false);
		self.requested = ko.observable(false);
		self.expenses = ko.observableArray([]);

		//$("input[type='checkbox']").attr("checked", true).checkboxradio("refresh");
		//$('#chckId').attr('checked', true).checkboxradio('refresh');

		$("#chckId").live("click", function () {
			if (this.checked) {
				$("#chckName").removeAttr("checked");
			}
			else {
				var two = $("#chckName").attr("checked", "checked");
			}
			$.uniform.update(two);
		});

		self.removeRevenue = function (revenue) {
			$.ajax({ type: "DELETE", url: "/api/Expense/delete/" + revenue.Id })
			.done(function () { self.expenses.remove(revenue); });
		}

		self.getData = function () {

			$('#formRange').validate();
			if ($('#formRange').valid()) {

				self.requested(true);
				self.loaded(false);
				self.loadedTotal(false);

				var urlTotal = "/api/Expense/GetTotal?v1=" + $('#To').val() + "&v2=" + $('#From').val()
				$.getJSON(urlTotal, function (data, status) {
					self.loadedTotal(true);
					$('#TotalMsg').text('Total: ' + data.Total);
				})
					.fail(function () { alert('Fail'); })
					.done(function () {
						self.loadedTotal(true);
					});

				var url = "/api/Expense/ByRange?from=" + $('#From').val() + "&to=" + $('#To').val()
				$.getJSON(url, self.expenses)
					.fail(function () {
						self.loaded(true);
						self.requested(false);
						$('#errorMsg').val('Fail!!!');
					})
					.done(function () {
						self.loaded(true);
						self.requested(false);
					});
			}
		}
	}

	function validateChck() {
		var isChecked1 = $('#chckId').attr('checked') ? true : false;
		var isChecked2 = $('#chckName').attr('checked') ? true : false;

		return (isChecked1 === true || isChecked2 === true);
	};

	function validateChck2() {
		var result = false;
		$("input[type=checkbox][checked]").each(function () {
			result = true;
			return result;
		});
		return result;
	};

	function find() {

		if (validateChck() === false) {
			$.mobile.changePage("#invalid-view-dialog", { transition: "slideup" });
			return;
		}

		var id = $('#prodId').val();
		var byId = document.getElementById("chckId").checked;
		var byName = document.getElementById("chckName").checked;

		if (byId == true) {
			$.getJSON("/api/expense/byid/" + id,
				function (data) {
					var str = data.Name + ': $' + data.Amount;
					$('#expenseSingle').text(str);
				})
				.fail(function (jqXHR, textStatus, err) {
					$('#expenseSingle').text('Error: ' + err);
				});
		}

		if (byName == true) {
			$.getJSON("/api/expense?name=" + id,
				function (data) {
					var str = data.Name + ': $' + data.Amount;
					$('#expenseSingle').text(str);
				})
			.fail(
				function (jqXHR, textStatus, err) {
					$('#expenseSingle').text('Error: ' + err);
				});
		}
	}

	ko.bindingHandlers.dateString = {
		update: function (element, valueAccessor, allBindingsAccessor, viewModel) {
			var value = valueAccessor(),
				allBindings = allBindingsAccessor();
			var valueUnwrapped = ko.utils.unwrapObservable(value);
			var pattern = allBindings.datePattern || 'MM/dd/yyyy';
			$(element).text(valueUnwrapped.toString(pattern));
		}
	}

	var model = new ExpensesViewModel();
	ko.applyBindings(model);
</script>

<div data-role="button" data-icon="plus" class="ui-btn-right">
	@Html.ActionLink("New", "CreateExpense", "ExpenseMobile")
</div>

<div id="expenseFormDiv" data-role="header">
	<header>
		<h4>Find expense</h4>
	</header>
	<div>
		<label for="prodId">ID:</label>
		<input type="text" id="prodId" size="5" />
		<input type="button" value="Search" onclick="find();" />
		<br />

		<div data-role="fieldcontain">
			<legend>Search by name id:</legend>
			<input type="checkbox" name="checkbox-1" id="chckId" />
			<label for="chckId">By id</label>
		</div>

		<div data-role="fieldcontain">
			<legend>Search by name field:</legend>
			<input type="checkbox" name="checkbox-2" id="chckName" />
			<label for="chckName">By name</label>
		</div>

		<div id="divSearchResult">
			<p id="expenseSingle" />
		</div>

		<br />
		<form id="formRange" data-bind="submit:getData">
			@Html.ValidationSummary(true)
			<fieldset>
				<legend>Revenue</legend>
				<div class="editor-label">
					@Html.LabelFor(model => model.From)
				</div>
				<div class="editor-field">
					@Html.EditorFor(model => model.From)
					@Html.ValidationMessageFor(model => model.From)
				</div>
				<div class="editor-label">
					@Html.LabelFor(model => model.To)
				</div>
				<div class="editor-field">
					@Html.EditorFor(model => model.To)
					@Html.ValidationMessageFor(model => model.To)
				</div>
				<button type="submit" data-icon="info" data-ajax="false">Get</button>
			</fieldset>
		</form>
	</div>
</div>

<div id="loadingDiv">
	<img id="loader" src="@Scripts.Url("~/Images/ajax-loader.gif")" data-bind="visible: requested()" />
</div>

<div data-bind="visible: loadedTotal()">
	<p id="TotalMsg"></p>
</div>

<div data-bind="visible: loaded()" id="divExpensesContent" data-role="footer">
	<header>
		<h3>Expenses:</h3>
	</header>
	<div id="expensesListDiv">
		<ul id="expenses" data-role="listview" data-inset="true" data-bind="visible: loaded, foreach: expenses">
			<li data-role="list-divider">Expense</li>
			<li>
				<h3 data-bind=" text: Name" />
				<h5 data-bind=" text: Amount" />
				<div>
					<span data-bind="text: Description"></span>
				</div>
				<div>
					<span data-bind="dateString: Time"></span>
				</div>
			</li>
		</ul>
	</div>
	<a class="top" data-ajax="false" data-role="button" data-bind="visible: loaded()" href="#expenseFormDiv">Back to top</a>
</div>