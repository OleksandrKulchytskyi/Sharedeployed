<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<title>@ViewBag.Title - ShareDeployed MVC Application</title>
	<link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<meta name="keywords" content="Sharedeployed,realtime messanger,SignalR,WebApi" />
	@Styles.Render("~/Content/themes/base/css", "~/Content/css")
	@Scripts.Render("~/bundles/modernizr")
	@RenderSection("Styles", false)
	<script type="text/javascript">
		function toLocalTime(src) {
			return new Date(src + " UTC").toString();
		}
	</script>
</head>
<body>
	<header>
		<div class="content-wrapper">
			<div class="float-left">
				<p class="site-title">@Html.ActionLink("Share deployed", "Index", "Home")</p>
			</div>
			<div class="float-right">
				<section id="login">
					@Html.Partial("_LoginPartial")
				</section>
				<nav>
					<ul id="menu">
						<li>@Html.ActionLink("Home", "Index", "Home")</li>
						<li>@Html.ActionLink("Expenses", "Expenses", "Home")</li>
						<li>@Html.ActionLink("Revenues", "Revenues", "Home")</li>
						<li>@Html.ActionLink("Words", "Index", "Words")</li>
						@if (Request.IsAuthenticated && Request.RequestContext.HttpContext.User.IsInRole("Admin"))
	  {
							<li>@Html.ActionLink("Trace data", "Index", "Trace")</li>
	  }
						@if (Request.Browser.IsMobileDevice)
	  {
							<li>@Html.Partial("_ViewSwitcher")</li>
	  }
					</ul>
				</nav>
			</div>
		</div>
	</header>
	<div id="body">
		@RenderSection("featured", required: false)
		<section class="content-wrapper main-content clear-fix">
			@RenderBody()
		</section>
	</div>
	<footer>
		<div class="content-wrapper">
			<div class="float-left">
				<p>&copy; @DateTime.UtcNow.Year - ShareDeployed ASP.NET MVC Application</p>
			</div>
		</div>
		<br />
		@if (Request.IsAuthenticated)
  {
			<br></br>
			<p></p>
			<div class="content-wrapper">
				<div class="float-left">
					<button id="btnCheckNew">Check new</button>
				</div>
			</div>
			<br></br>
			<div id="statusdiv" class="float-left">
				<ul id="connectionStatuses"></ul>
			</div>
			<br></br>
			<p></p>
			<div id="NewMessagesDialogDiv" style="display: none">
				<ul id="MessagesContainer" data-bind="{template:{name: 'newMessage-template', foreach: newMessages} }">
				</ul>
			</div>
			<br></br>
			<p></p>
			<div id="CheckMessagesDialog" style="display: none">
				<ul id="CheckMessagesContainer" data-bind="{template:{name: 'groupMessagesTempl', foreach: groupsMessages} }">
				</ul>
			</div>
			<div id="MsgResponseDialog" style="display: none">
				<div id="responseContainer">
					<textarea id="responseValue" data-bind="value:ResponseText"></textarea>
				</div>
			</div>
  }
	</footer>

	@Scripts.Render("~/bundles/jquery")
	@Scripts.Render("~/bundles/jqueryui")
	@Scripts.Render("~/bundles/knockout")
	@Scripts.Render("~/bundles/jqueryval")
	@Scripts.Render("~/bundles/cookie")
	@Scripts.Render("~/bundles/app")
	@Scripts.Render("~/bundles/SignalR")
	@Scripts.Render("~/bundles/singletonHub")
	@RenderSection("scripts", required: false)
	<script type="text/javascript" src="~/signalr/hubs"></script>
	<script type="text/html" id="newMessage-template">
		<li class="ui-widget-content ui-corner-all">
			<h3 data-bind="text: Subject" class="ui-widget-header"></h3>
			<div>
				<span data-bind="text: From || 'From?'"></span>
			</div>
			<div>
				<span data-bind="stringOfDate: When"></span>
			</div>
			<div><a href='#' data-bind='click: $root.markAsRead'>Mark as read</a></div>
		</li>
	</script>
	<script type="text/html" id="groupMessagesTempl">
		<li>
			<h3 data-bind="text: GroupName" class="ui-widget-header"></h3>
			<ul data-bind="{template: {name:'MsgTemplate', foreach:Messages }}">
			</ul>
		</li>
	</script>
	<script type="text/html" id="MsgTemplate">
		<li class="ui-widget-content ui-corner-all">
			<h4 data-bind="text: Subject" class="ui-widget-header"></h4>
			<div>
				<span data-bind="text: From || 'From?'"></span>
			</div>
			<div>
				<span data-bind="stringOfDate: When"></span>
			</div>
			<div><a href='#' data-bind='click: $root.deleteMsg'>Delete</a></div>
			<div><a href='#' data-bind='click: $root.onResponseToMsg'>Reply</a></div>
		</li>
	</script>
	<script type="text/javascript">
		$.fx.speeds._default = 800;

		ko.bindingHandlers.stopBindings = {
			init: function () {
				return { 'controlsDescendantBindings': true };
			}
		};

		ko.observableArray.fn.removeMsgFromGroup = function (grpName, msg) {
			var group = ko.utils.arrayFirst(this(), function (item) {
				return item.GroupName() === grpName;});

			if (group !== undefined && group !== null) {
				group.Messages.valueWillMutate();
				group.Messages.remove(msg);
				group.Messages.valueHasMutated();
			}
		};

		// DOM has been initialized
		$(document).ready(function () {

			console.log(singletonHub.getInstance());
			var MsgsVM = singletonHub.getInstance().MsgsVM();
			ko.applyBindings(MsgsVM);
			MsgsVM.SetResponseDialogState(false);

			$('#btnCheckNew').click(function () {
				if (singletonHub.getInstance().messanger !== undefined) {
					console.log(singletonHub.getInstance().messanger);
					singletonHub.getInstance().messanger.server.checkForNewMessages();
				}
			});

			ko.bindingHandlers.stringOfDate = {
				update: function (element, valueAccessor, allBindingsAccessor, viewModel) {
					var value = valueAccessor(),
						allBindings = allBindingsAccessor();
					var valueUnwrapped = ko.utils.unwrapObservable(value);
					var pattern = allBindings.datePattern || 'MM/dd/yyyy';
					$(element).text(valueUnwrapped.toString(pattern));
				}
			}

			$('#NewMessagesDialogDiv').dialog({
				autoOpen: false, modal: true,
				width: 450, height: 350,
				hide: "explode", show: "blind",
				closeOnEscape: true,
				buttons: {
					"Close": function () {
						$(this).dialog("close");
					}
				},
				open: function (event, ui) {
				}
			});

			$('#CheckMessagesDialog').dialog({
				autoOpen: false, modal: true,
				width: 450, height: 400,
				hide: "explode", show: "blind",
				closeOnEscape: true,
				buttons: {
					"Close": function () {
						$(this).dialog("close");
					}
				},
				open: function (event, ui) {
				}
			});

			$('#MsgResponseDialog').dialog({
				autoOpen: false, modal: true,
				width: 480, height: 430,
				hide: "explode", show: "blind",
				title: "Mail response",
				closeOnEscape: true,
				buttons: {
					"Cancel": function () {
						MsgsVM.SetResponseDialogState(false);
						$(this).dialog("close");
					},
					"Send": function () {
						MsgsVM.SendResponseToMsg();
					}
				},
				open: function (event, ui) {
					MsgsVM.SetResponseDialogState(true);
				}
			});

			if (singletonHub.getInstance().messanger !== undefined
				&& singletonHub.getInstance().HubStarted===false) {
				console.log("singletonHub.getInstance().messanger:" + singletonHub.getInstance().messanger);
				console.log("_Layout.cshtml -> starting hub");
				singletonHub.getInstance().startHub();
			}
		});
	</script>
</body>
</html>
